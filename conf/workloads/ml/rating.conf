hibench.rating.tiny.users               100
hibench.rating.tiny.products          	100
hibench.rating.tiny.ratings   		500
hibench.rating.tiny.implicitprefs       true
hibench.rating.small.users              1000
hibench.rating.small.products           1000
hibench.rating.small.ratings  		5000
hibench.rating.small.implicitprefs      true
hibench.rating.large.users              10000
hibench.rating.large.products           10000
hibench.rating.large.ratings  		50000
hibench.rating.large.implicitprefs      true
hibench.rating.huge.users               500000
hibench.rating.huge.products            100000
hibench.rating.huge.ratings   		2500000
hibench.rating.huge.implicitprefs       true
hibench.rating.gigantic.users           1000000
hibench.rating.gigantic.products        1000000
hibench.rating.gigantic.ratings   	5000000
hibench.rating.gigantic.implicitprefs   true
hibench.rating.bigdata.users            2000000
hibench.rating.bigdata.products         10000000
hibench.rating.bigdata.ratings   	100000000
hibench.rating.bigdata.implicitprefs    true


hibench.rating.users			${hibench.rating.${hibench.scale.profile}.users}
hibench.rating.products			${hibench.rating.${hibench.scale.profile}.products}
hibench.rating.ratings			${hibench.rating.${hibench.scale.profile}.ratings}
hibench.rating.implicitprefs 		${hibench.rating.${hibench.scale.profile}.implicitprefs}

hibench.als.rank			10
hibench.als.num_iterations		20
hibench.als.Lambda			1.0
hibench.als.kyro 			false

hibench.rating.partitions		${hibench.default.map.parallelism}
# storageLevel for the RDDs 0: off-heap 1: disk_only 3: memory_only  5: memory_ser 7: memory_and_disk 9: memory_and_disk_ser
hibench.rating.storage_level           7
hibench.rating.disable_kryo            false

# export for shell script
hibench.workload.input			${hibench.hdfs.data.dir}/Rating/Input
hibench.workload.output			${hibench.hdfs.data.dir}/Rating/Output
